# Generated by Django 4.1 on 2023-01-17 13:03

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('in_use', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='BillItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('billType', models.CharField(choices=[('S', 'Service Fee')], max_length=10)),
                ('name', models.CharField(max_length=50)),
                ('item_price', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('price', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Specialization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='StaffRank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rank', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(db_index=True, max_length=255, null=True, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_patient', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('firstname', models.CharField(max_length=30)),
                ('lastname', models.CharField(max_length=30)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('object', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='PatientDetails',
            fields=[
                ('patient', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('mobile', models.IntegerField()),
                ('age', models.IntegerField()),
                ('weight', models.PositiveIntegerField()),
                ('height', models.PositiveIntegerField()),
                ('blood_type', models.CharField(max_length=4)),
                ('address', models.CharField(max_length=50)),
                ('symptoms', models.CharField(max_length=30)),
                ('entry', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Staff',
            fields=[
                ('staff', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='owner', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('mobile', models.IntegerField()),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Hospital_Management.staffrank')),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('name', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='Hospital_Management.staff')),
                ('specialization', models.ManyToManyField(to='Hospital_Management.specialization')),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_the_week', models.CharField(max_length=10)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Hospital_Management.staff')),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('release_date', models.DateField(default=None)),
                ('days_spent', models.PositiveIntegerField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('bill', models.ManyToManyField(to='Hospital_Management.billitem')),
                ('patient_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Hospital_Management.patientdetails')),
                ('doctor_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Hospital_Management.doctor')),
            ],
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField()),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField(default=datetime.time(15, 3, 14, 3937))),
                ('status', models.CharField(choices=[('P', 'Pending'), ('A', 'Approved'), ('C', 'Completed')], default='P', max_length=10)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Hospital_Management.patientdetails')),
                ('assigned_doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Hospital_Management.doctor')),
            ],
            options={
                'permissions': (('can_view_appointments', 'View appointments'),),
            },
        ),
        migrations.CreateModel(
            name='AdmittedPatient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('admission_date', models.DateField(auto_now_add=True)),
                ('bed', models.OneToOneField(on_delete=django.db.models.deletion.RESTRICT, to='Hospital_Management.bed')),
                ('patient', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='Hospital_Management.patientdetails')),
                ('assigned_doctor', models.ManyToManyField(to='Hospital_Management.doctor', verbose_name='doctor')),
            ],
        ),
    ]
